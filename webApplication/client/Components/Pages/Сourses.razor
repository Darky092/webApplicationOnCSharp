@page "/user/{id}/courses/choose"
@inject NavigationManager Navigation
@layout Client.Components.Layout.MainLayout
@using Contracts.courses
@using Contracts.students_group
@using Contracts.Data
@inject HttpClient Http
@using Microsoft.AspNetCore.Components.Web
@rendermode RenderMode.InteractiveServer



<h2>Выберите курс обучения</h2>

@if (Courses == null)
{
    <p>Загрузка...</p>
}
else if (Courses.Count == 0)
{
    <p>На данный момент нет доступных курсов.</p>
}
else
{
    <div class="courses-grid">
        @foreach (var course in Courses)
        {

            <div class="course-card">
                <h3>@course.Title</h3>
                <p>@course.Description</p>
                <p><strong>Продолжительность:</strong> @course.Duration</p>
                <button class="btn btn-select" @onclick="() => SelectCourse(userId ,course.GroupId)">
                    Выбрать курс
                </button>
            </div>
        }

    </div>
    <p>@errorMessage</p>
}

@code {

    [Parameter]
    public string? id { get; set; }
    public int userId;
    private string? ErrorMessage;
    protected override void OnParametersSet()
    {

        userId = Convert.ToInt32(id);
    }

    public string errorMessage = "";

    public CourseData courses = new CourseData();
    public static List<Course> Courses = new List<Course>();



    protected override void OnInitialized()
    {
        Courses = courses.GetCourses();
    }


    private async Task SelectCourse(int courseId ,  int groupId)
    {
        StudentGroupBody obj = new StudentGroupBody();
        obj.userid = userId;
        obj.groupid = groupId;

        var response = await Http.PostAsJsonAsync("/api/StudentsGroup", obj);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo($"/user/{id}/courses");
        }
        else
        {
            errorMessage = "Вы уже записаны на этот курс";
        }
    }
}
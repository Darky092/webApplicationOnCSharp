@page "/user/{UserId:int}"
@layout Client.Components.Layout.MainLayout
@inject HttpClient Http
@rendermode InteractiveServer

@if (user == null)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 60vh;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Загрузка...</span>
        </div>
    </div>
}
else
{
    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="profile-card rounded-4 shadow-sm border-0 overflow-hidden">
                    <div class="profile-header bg-gradient-primary text-white p-4 text-center">
                        <div class="avatar-container mb-3">
                            @if (!string.IsNullOrEmpty(user.avatar))
                            {
                                <img src="@user.avatar" alt="Аватар" class="profile-avatar rounded-circle border border-3 border-white" />
                            }
                            else
                            {
                                <div class="profile-avatar-placeholder rounded-circle bg-white d-flex align-items-center justify-content-center">
                                    <i class="bi bi-person text-primary fs-1"></i>
                                </div>
                            }
                        </div>
                        <h2 class="text-white mb-1 fw-bold">
                            @user.name @user.surname
                            @if (!string.IsNullOrEmpty(user.patronymic))
                            {
                                <span class="text-light">@user.patronymic</span>
                            }
                        </h2>
                        <div class="badge bg-white text-primary px-3 py-2 fw-semibold rounded-pill">
                            @GetRoleDisplayName(user.role)
                        </div>
                    </div>

                    <div class="profile-body p-4">
                        <div class="row g-3">
                            <div class="col-12">
                                <div class="d-flex align-items-center">
                                    <div class="icon-circle bg-light-primary me-3">
                                        <i class="bi bi-envelope text-primary fs-5"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Email</small>
                                        <div class="fw-medium">@user.email</div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="d-flex align-items-center">
                                    <div class="icon-circle bg-light-primary me-3">
                                        <i class="bi bi-telephone text-primary fs-5"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Телефон</small>
                                        <div class="fw-medium">@user.telephonnumber</div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="d-flex align-items-center">
                                    <div class="icon-circle bg-light-primary me-3">
                                        <i class="bi bi-calendar-check text-primary fs-5"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Регистрация</small>
                                        <div class="fw-medium">
                                            @(user.createdat?.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("ru-RU")) ?? "—")
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="d-flex align-items-center">
                                    <div class="icon-circle @(user.isactive == true ? "bg-light-success" : "bg-light-danger") me-3">
                                        <i class="bi @(user.isactive == true ? "bi-check-circle" : "bi-x-circle") text-@(user.isactive == true ? "success" : "danger") fs-5"></i>
                                    </div>
                                    <div>
                                        <small class="text-muted">Статус</small>
                                        <div class="fw-medium text-@(user.isactive == true ? "success" : "danger")">
                                            @(user.isactive == true ? "Активен" : "Неактивен")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (user.role == "Teacher")
                        {
                            <div class="mt-4 text-center">
                                <a class="btn btn-primary btn-lg px-4 py-2 rounded-pill fw-bold shadow-sm"
                                   href="@($"/user/{user.userid}/lectures/create")">
                                    <i class="bi bi-plus-circle me-2"></i>Добавить лекцию
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int UserId { get; set; }
    private User? user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync($"api/User/{UserId}");
            if (response.IsSuccessStatusCode)
            {
                user = await response.Content.ReadFromJsonAsync<User>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка загрузки профиля: {ex.Message}");
        }
    }

    private string GetRoleDisplayName(string role) => role switch
    {
        "Student" => "Студент",
        "Teacher" => "Преподаватель",
        "Admin" => "Администратор",
        _ => role
    };

    public class User
    {
        public int userid { get; set; }
        public string? avatar { get; set; }
        public string name { get; set; } = "";
        public string surname { get; set; } = "";
        public string? patronymic { get; set; }
        public string email { get; set; } = "";
        public string telephonnumber { get; set; } = "";
        public string passwordhash { get; set; } = "";
        public string role { get; set; } = "";
        public bool? isactive { get; set; }
        public DateTimeOffset? createdat { get; set; }
    }
}